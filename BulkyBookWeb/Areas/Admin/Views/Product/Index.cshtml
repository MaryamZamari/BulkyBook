@using BulkyBook.Models

@model IEnumerable<Product>            //to be able to VISUALISE the CoverType

@{
    ViewData["Title"] = "Index";
}


<partial name="_Notification"/>
<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Product List</h2>
        </div>
        <div class="col-6">
            <a asp-controller="Product" asp-action="Upsert" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i>
                Create New Product
            </a>
         </div>
         <hr />
    </div>

</div>

<h1>Index Product</h1>
<table class="table table-bordered table-striped" style="width:100%">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>ISBN</th>
            <th>Price</th>
            <th>Author</th>
            <th>Category</th>
            <th>Cover Type</th>
        </tr>
    </thead>
</table>
  @* ######  ----------we dont need tbody, because here we are showing the tbody using API call.---------############## 
  @*<tbody>
        @foreach(var obj in Model){
            <tr>
                <td width="50%">
                    @obj.Title
                </td>
                <td>
                    <div class="w-75 btn-group" role="group">
                    <a asp-controller="Product" asp-action="Upsert" asp-route-id="@obj.Id" class="btn btn-primary mx-2">
                            <i class="bi bi-pencil-square"></i>
                            Edit</a>
                    <a asp-controller="Product" asp-action="Delete" asp-route-id="@obj.Id" class="btn btn-danger mx-2">
                            <i class="bi bi-trash3-fill"></i>
                            Delete
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>  *@


